{
  "name": "paste-and-upload",
  "version": "0.2.0",
  "publisher": "duanyll",
  "engines": {
    "vscode": "^1.97.0"
  },
  "license": "MIT",
  "displayName": "Paste and Upload",
  "description": "Paste images (and other files) directly from your clipboard, upload them to a S3 bucket or save them to your workspace, then insert a link pointing to the image. Works in remote development environments.",
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Duanyll/paste-and-upload"
  },
  "keywords": [
    "paste",
    "upload",
    "image",
    "picture",
    "markdown"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "icon": "assets/icon.png",
  "capabilities": {
    "virtualWorkspaces": true,
    "untrustedWorkspaces": {
      "supported": "limited",
      "description": "The extension does not read S3 credentials from untrusted workspaces.",
      "restrictedConfigurations": [
        "paste-and-upload.s3"
      ]
    }
  },
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "paste-and-upload.testS3Connection",
        "title": "Test S3 Connection"
      },
      {
        "command": "paste-and-upload.undoRecentUpload",
        "title": "Undo Recent Upload"
      }
    ],
    "configuration": {
      "title": "Paste and Upload",
      "properties": {
        "paste-and-upload.s3.region": {
          "type": "string",
          "default": "",
          "description": "The region of the S3-compatible storage. Must be set."
        },
        "paste-and-upload.s3.endpoint": {
          "type": "string",
          "default": "",
          "description": "The endpoint of the S3-compatible storage. Leave empty if you are using AWS S3."
        },
        "paste-and-upload.s3.accessKeyId": {
          "type": "string",
          "default": "",
          "description": "The access key ID of the S3-compatible storage. Can be left empty if your bucket does not require authentication to upload files (Not recommended)."
        },
        "paste-and-upload.s3.secretAccessKey": {
          "type": "string",
          "default": "",
          "description": "The secret access key of the S3-compatible storage. Can be left empty if your bucket does not require authentication to upload files (Not recommended)."
        },
        "paste-and-upload.s3.bucket": {
          "type": "string",
          "default": "",
          "description": "The bucket of the S3-compatible storage. Must be set."
        },
        "paste-and-upload.s3.prefix": {
          "type": "string",
          "default": "",
          "markdownDescription": "The path prefix that will be used to store the files. For example, `images/` will store the files in the `images` folder. (Slashes will be preserved)."
        },
        "paste-and-upload.s3.publicUrlBase": {
          "type": "string",
          "default": "",
          "markdownDescription": "The base that should be prepended to the file name to generate the final link. For example, `https://example.com/imgs/` will generate the URL `https://example.com/imgs/image.png`. The path prefix should be manually added to the base URL (slashes will be preserved), or handled by your reverse proxy."
        },
        "paste-and-upload.s3.omitExtension": {
          "type": "boolean",
          "default": false,
          "description": "Do not include the file extension in the uploaded file name (key)."
        },
        "paste-and-upload.workspace.path": {
          "type": "string",
          "default": "images",
          "description": "The path where the files will be saved locally. The path is relative to the workspace folder."
        },
        "paste-and-upload.workspace.linkBase": {
          "type": "string",
          "default": "images/",
          "description": "The base that should be prepended to the file name to generate the final link."
        },
        "paste-and-upload.enabled": {
          "type": "boolean",
          "default": true,
          "scope": "language-overridable",
          "description": "Enable the extension.",
          "order": 0
        },
        "paste-and-upload.uploadDestination": {
          "type": "string",
          "default": "s3",
          "enum": [
            "s3",
            "workspace"
          ],
          "enumDescriptions": [
            "Upload the files to the S3-compatible storage.",
            "Save the files locally in the workspace."
          ],
          "scope": "language-overridable",
          "description": "The destination where the files will be uploaded.",
          "order": 1
        },
        "paste-and-upload.fileSizeLimit": {
          "type": "integer",
          "default": 10000000,
          "scope": "language-overridable",
          "description": "File size limit in bytes. Users will be prompted to confirm the upload if the file size exceeds this limit. Set to 0 to disable the limit."
        },
        "paste-and-upload.allowMultipleFiles": {
          "type": "string",
          "default": "prompt",
          "enum": [
            "prompt",
            "allow",
            "deny"
          ],
          "scope": "language-overridable",
          "description": "Allow multiple files to be uploaded at once."
        },
        "paste-and-upload.mimeTypeDetectionMethod": {
          "type": "string",
          "default": "content",
          "enum": [
            "content",
            "extension",
            "none"
          ],
          "enumItemLabels": [
            "Content",
            "Extension",
            "None"
          ],
          "markdownEnumDescriptions": [
            "Detect the MIME type of the files based on magic bytes in the content, and fallbacks to file extension when failed",
            "Detect the MIME type of the files based on the file extension",
            "Do not detect the MIME type of the files, use `application/octet-stream` as the default MIME type"
          ],
          "scope": "language-overridable",
          "description": "How to detect the MIME type of the files when the clipboard does not provide it."
        },
        "paste-and-upload.keepOriginalFilename": {
          "type": "boolean",
          "default": false,
          "scope": "language-overridable",
          "markdownDescription": "Keep the original file name when uploading files. If disabled, a random name will be generated. Default file names like `image.png` will always be renamed."
        },
        "paste-and-upload.fileNamingMethod": {
          "type": "string",
          "default": "md5Short",
          "enum": [
            "md5",
            "md5Short",
            "uuid",
            "nanoid",
            "unixTimestamp",
            "readableTimestamp",
            "prompt"
          ],
          "enumItemLabels": [
            "MD5 Hash",
            "Short MD5 Hash",
            "UUID",
            "Nano ID",
            "Unix Timestamp",
            "Readable Timestamp",
            "Prompt"
          ],
          "enumDescriptions": [
            "MD5 hash of the file content.",
            "Short (8 Digits) MD5 hash of the file content.",
            "Random UUIDv4.",
            "Random Nano ID.",
            "Unix timestamp in milliseconds.",
            "Human-readable timestamp.",
            "Prompt the user for a name."
          ],
          "scope": "language-overridable",
          "markdownDescription": "The method used to generate the file name when `#paste-and-upload.keepOriginalFilename#` is disabled, or when the file name is not provided by the clipboard.",
          "order": 2
        },
        "paste-and-upload.defaultSnippet": {
          "type": "string",
          "default": "${url}",
          "scope": "language-overridable",
          "markdownDescription": "The default snippet that will be inserted in the document after uploading. The following variables can be used: \n\n- `${url}`\n- `${filename}`\n- `${filenameWithoutExtension}`\n- `${extension}`\n- `${mimeType}`",
          "order": 3
        },
        "paste-and-upload.imageSnippet": {
          "type": "string",
          "default": "${url}",
          "scope": "language-overridable",
          "markdownDescription": "The default snippet that will be inserted in the document after uploading. The following variables can be used: \n\n- `${url}`\n- `${filename}`\n- `${filenameWithoutExtension}`\n- `${extension}`\n- `${mimeType}`",
          "order": 4
        },
        "paste-and-upload.undoLimit": {
          "type": "integer",
          "default": 10,
          "markdownDescription": "The maximum number of undo uploads that can be performed. Set to 0 to disable the undo feature."
        },
        "paste-and-upload.mimeTypeFilter": {
          "type": "string",
          "default": "",
          "markdownDescription": "A regular expression that matches the MIME types that should be uploaded, for example, `image/.*` will only upload images. Leave empty to upload any MIME type. Note that the MIME type of text files is not realiably detected, and will be treated as `application/octet-stream` if the detection fails.",
          "order": 5
        },
        "paste-and-upload.ignoreWorkspaceFiles": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Ignore files that are already in the workspace when uploading files. Other extensions like the built-in Markdown extension may handle these files.",
          "order": 6
        }
      }
    },
    "configurationDefaults": {
      "[markdown]": {
        "paste-and-upload.defaultSnippet": "[${1:$TM_SELECTED_TEXT}](${url})",
        "paste-and-upload.imageSnippet": "![${1:$TM_SELECTED_TEXT}](${url})"
      },
      "[tex][latex]": {
        "paste-and-upload.uploadDestination": "workspace",
        "paste-and-upload.fileNamingMethod": "prompt",
        "paste-and-upload.imageSnippet": "\\includegraphics{${url}}"
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@aws-sdk/client-s3": "^3.738.0",
    "@aws-sdk/lib-storage": "^3.738.0",
    "@babel/core": "^7.26.7",
    "@babel/plugin-transform-modules-commonjs": "^7.26.3",
    "@babel/preset-env": "^7.26.7",
    "@types/lodash": "^4.17.14",
    "@types/mime-types": "^2.1.4",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.17.0",
    "@typescript-eslint/parser": "^8.17.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "babel-loader": "^9.2.1",
    "eslint": "^9.16.0",
    "file-type": "^20.0.0",
    "filesize": "^10.1.6",
    "lodash": "^4.17.21",
    "md5.js": "^1.3.5",
    "mime-types": "^2.1.35",
    "nanoid": "^5.0.9",
    "ts-loader": "^9.5.2",
    "typescript": "^5.7.2",
    "uuid": "^11.0.5",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1"
  }
}
